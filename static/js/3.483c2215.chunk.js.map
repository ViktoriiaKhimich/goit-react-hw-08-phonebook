{"version":3,"sources":["shared/components/FormInput/FormInput.module.css","shared/components/FormInput/FormInput.jsx","client/contacts/components/ContactFrom/ContactFrom.module.css","client/contacts/components/Filter/Filter.module.css","client/contacts/components/ContactListItem/ContactListItem.module.css","client/contacts/redux/selectors.js","client/contacts/redux/operations.js","../node_modules/uuid/dist/esm-browser/rng.js","client/contacts/components/ContactFrom/fields.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","client/contacts/components/ContactFrom/ContactFrom.jsx","client/contacts/components/Filter/Filter.jsx","client/contacts/components/ContactListItem/ContactListItem.jsx","client/contacts/components/ContactList/ContactList.jsx","client/contacts/pages/PhonebookPage/PhoneBookPage.jsx"],"names":["module","exports","FormInput","classname","props","className","styles","searchField","defaultProps","required","placeholder","name","type","value","onChange","getFilter","state","phonebook","filter","getContacts","contacts","filteredContacts","createSelector","normalizedFilter","toLowerCase","contact","includes","fetchContactsRequest","actions","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","axios","defaults","baseURL","getRandomValues","dispatch","get","then","data","catch","error","message","number","post","contactId","delete","fields","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","validate","uuid","REGEX","test","byteToHex","i","push","toString","substr","stringify","arr","offset","arguments","length","undefined","TypeError","v4","options","buf","rnds","random","ContactFrom","handleChange","e","target","setState","handleSubmit","preventDefault","find","item","onSubmit","reset","alert","nameFieldId","numberFieldId","this","form","formInput","htmlFor","formField","Component","connect","operations","Filter","filterFieldId","inputField","input","id","filterContacts","ContactListItem","onClick","contactListItem","btn","contactElements","map","PhonebookPage","fetchContacts","loading"],"mappings":"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","file":"static/js/3.483c2215.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchField\":\"FormInput_searchField__1vQV9\"};","import React from 'react'\nimport PropTypes from 'prop-types';\nimport typeOptions from './typeOptions'\n\nimport styles from './FormInput.module.css'\n\nconst FormInput = ({ classname, ...props }) => {\n    return (<>\n        <input className={`${styles.searchField} ${classname}`} {...props} />\n    </>);\n}\n\nFormInput.defaultProps = {\n    required: false,\n    placeholder: '',\n    name: '',\n    className: '',\n    type: 'text',\n    value: '',\n    onChange: () => { }\n}\n\nFormInput.propTypes = {\n    placeholder: PropTypes.string,\n    name: PropTypes.string,\n    className: PropTypes.string,\n    type: PropTypes.oneOf(typeOptions),\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n}\n\nexport default FormInput;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactFrom_form__16Sb7\",\"formInput\":\"ContactFrom_formInput__2TK3S\",\"formField\":\"ContactFrom_formField__2RJ7L\",\"errorMessage\":\"ContactFrom_errorMessage__2kHLo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputField\":\"Filter_inputField__2-stO\",\"input\":\"Filter_input__1FdOO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactListItem\":\"ContactListItem_contactListItem__Vjiud\",\"btn\":\"ContactListItem_btn__1KOmA\"};","import { createSelector } from '@reduxjs/toolkit'\n\nexport const loading = ({ phonebook }) => phonebook.loading;\n\nexport const getFilter = (state) => state.phonebook.filter;\n\nexport const getContacts = (state) => state.phonebook.contacts;\n\nexport const filteredContacts = createSelector(\n    [getFilter, getContacts],\n    (filter, contacts) => {\n        const normalizedFilter = filter.toLowerCase();\n        return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter))\n    }\n)\n\n// export const filteredContacts = (state) => {\n//     const contacts = getContacts(state);\n//     const filter = getFilter(state);\n\n//     const normalizedFilter = filter.toLowerCase();\n//     return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter))\n// }\n","import axios from 'axios';\nimport actions from './actions'\n\nconst { fetchContactsRequest, fetchContactsSuccess, fetchContactsError, addContactRequest, addContactSuccess, addContactError, deleteContactRequest, deleteContactSuccess, deleteContactError } = actions;\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst fetchContacts = () => dispatch => {\n    dispatch(fetchContactsRequest())\n\n    axios\n        .get('/contacts')\n        .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n        .catch(error => dispatch(fetchContactsError(error.message)))\n}\n\nconst addContact = (name, number) => dispatch => {\n    const contact = { name, number };\n\n    dispatch(addContactRequest())\n\n    axios\n        .post('/contacts', contact)\n        .then(({ data }) => dispatch(addContactSuccess(data)))\n        .catch(error => dispatch(addContactError(error.message)));\n}\n\nconst deleteContact = contactId => dispatch => {\n    dispatch(deleteContactRequest());\n\n    axios\n        .delete(`/contacts/${contactId}`)\n        .then(() => dispatch(deleteContactSuccess(contactId)))\n        .catch(error => dispatch(deleteContactError(error.message)))\n}\n\n\nexport default { fetchContacts, addContact, deleteContact };","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export const fields = {\n    name: {\n        type: 'text',\n        value: '',\n        name: 'name',\n        required: true,\n    },\n    number: {\n        type: 'text',\n        value: '',\n        name: 'number',\n        required: true,\n    }\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { getContacts } from '../../redux/selectors'\nimport operations from '../../redux/operations'\nimport FormInput from '../../../../shared/components/FormInput'\nimport { fields } from './fields';\nimport { v4 } from 'uuid'\n\nimport styles from './ContactFrom.module.css'\n\nclass ContactFrom extends Component {\n\n    state = {\n        name: \"\",\n        number: \"\",\n    }\n\n    handleChange = (e) => {\n        const { name, value } = e.target;\n        this.setState({\n            [name]: value,\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const { name, number } = this.state;\n        const contact = this.props.contacts.find(item => item.name === name || item.number === number)\n        if (!contact) {\n            this.props.onSubmit(name, number)\n            this.reset()\n            return\n        }\n        alert(`${name} is already in contacts`)\n        this.reset()\n\n    }\n\n    reset = () => {\n        this.setState({\n            name: '',\n            number: '',\n        })\n    }\n\n    render() {\n        const nameFieldId = v4();\n        const numberFieldId = v4();\n        const { name, number } = this.state;\n        const { handleChange, handleSubmit } = this;\n        return (\n            <>\n                <form className={styles.form} onSubmit={handleSubmit}>\n                    <div className={styles.formInput}>\n                        <label htmlFor={nameFieldId}>Name</label>\n                        <FormInput onChange={handleChange} {...fields.name} value={name} className={styles.formField} />\n                        <label htmlFor={numberFieldId}>Number</label>\n                        <FormInput onChange={handleChange} {...fields.number} value={number} className={styles.formField} />\n                    </div>\n                    <button type=\"submit\">Add contact</button>\n                </form>\n            </>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    contacts: getContacts(state),\n})\n\nconst mapDispatchToProps = dispatch => ({\n    onSubmit: (name, number) => dispatch(operations.addContact(name, number)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactFrom);","import React from 'react';\nimport { v4 } from 'uuid';\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport actions from '../../redux/actions'\nimport { getFilter } from '../../redux/selectors'\n\nimport styles from './Filter.module.css'\n\nconst Filter = ({ filter, onChange }) => {\n\n    const filterFieldId = v4();\n    return (\n        <div className={styles.inputField}>\n            <label htmlFor={filterFieldId}>Find contacts by name</label>\n            <input\n                className={styles.input}\n                id={filterFieldId}\n                type=\"text\"\n                value={filter}\n                onChange={onChange}\n            />\n        </div>\n    );\n}\n\nconst mapStateToProps = state => ({\n    filter: getFilter(state),\n})\n\nconst mapDispatchToProps = dispatch => ({\n    onChange: (e) => dispatch(actions.filterContacts(e.target.value))\n})\n\nFilter.defaultProps = {\n    filter: '',\n    onChange: () => { }\n}\n\nFilter.propTypes = {\n    filter: PropTypes.string,\n    onChange: PropTypes.func,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import React from 'react';\nimport PropTypes from 'prop-types'\n\nimport styles from './ContactListItem.module.css'\n\nconst ContactListItem = ({ name, number, onClick }) => {\n    return (\n        <li className={styles.contactListItem}>\n            <p>{name}: {number}</p>\n            <button className={styles.btn} type=\"button\" onClick={onClick}>Delete</button>\n        </li>\n    );\n}\n\n\nContactListItem.propTypes = {\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n}\n\nexport default ContactListItem;","import React from 'react';\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport ContactListItem from '../ContactListItem'\nimport operations from '../../redux/operations'\nimport { filteredContacts } from '../../redux/selectors'\n\nconst ContactList = ({ contacts, onClick }) => {\n    const contactElements = contacts.map(({ id, ...props }) => <ContactListItem key={id} {...props} onClick={() => onClick(id)} />)\n    return (\n        <ul>\n            {contactElements}\n        </ul>\n    )\n}\n\nContactList.propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired\n    }).isRequired)\n}\n\nconst mapStateToProps = (state) => ({\n    contacts: filteredContacts(state)\n})\n\nconst mapDispatchToPtops = dispatch => ({\n    onClick: (id) => dispatch(operations.deleteContact(id))\n})\n\nexport default connect(mapStateToProps, mapDispatchToPtops)(ContactList);","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport ContactForm from '../../components/ContactFrom'\nimport Filter from '../../components/Filter';\nimport ContactList from '../../components/ContactList'\nimport operations from '../../redux/operations'\nimport { loading } from '../../redux/selectors'\n\nclass PhonebookPage extends Component {\n\n    componentDidMount() {\n        this.props.fetchContacts()\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Phonebook</h1>\n                <ContactForm />\n\n                <h2>Contacts</h2>\n                <Filter />\n\n                {this.props.loading && <h1>...Loading</h1>}\n                <ContactList />\n            </div>\n        )\n    }\n}\n\nconst mapStateToPtops = state => ({\n    loading: loading(state)\n})\nconst mapDispatchToProps = dispatch => ({\n    fetchContacts: () => dispatch(operations.fetchContacts())\n})\n\nexport default connect(mapStateToPtops, mapDispatchToProps)(PhonebookPage);"],"sourceRoot":""}